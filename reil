<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Manga Search</title>
  <style>
 body{

    width: 100%;
    margin: 0;
    background-image: url("Background2.gif");
    background-size: cover;
    background-repeat: no-repeat;
    }

    .container {
      text-align: center;
      position: center;
      top: 20%;
      left: 50%;
      
      
    }


input[type="text"] {
  padding: 8px;
  margin-right: 8px;
  border-radius: 4px;
  border: 1px solid #ccc;
}

button {
  padding: 8px 16px;
   cursor: pointer;
  border-radius: 4px;
  border: none;
  background-color: #007bff; /* A splash of magic color! */
  color: #fff;
}

.manga-card {
   border: 1px solid #ddd;
  border-radius: 8px;
  margin: 10px;
  padding: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  background-color: transparent;
  
}

.manga-card h2 {
  font-size: 1.5em;
  margin-bottom: 5px;
}

.manga-card img {
  max-width: 100%;
  height: auto;
  border-radius: 6px;
  margin-bottom: 10px;
}

.manga-card p {
  line-height: 1.5;
  color: #333;
}


</style>
</head>
<body>
  <div class="container">
    <h1 class="title">Manga Search</h1>
    <input type="text" id="searchInput" placeholder="Enter manga title...">
    <button onclick="searchManga()">Search</button>
    <div id="results"></div>
  </div>

  <script">
const searchInput = document.getElementById('searchInput');
const resultsDiv = document.getElementById('results');

async function searchManga() {
  const searchTerm = searchInput.value.trim();
  if (searchTerm === '') {
    alert('Please enter a manga title!');
    return;
  }

  const apiUrl = `https://api.mangadex.org/manga?title=${encodeURIComponent(searchTerm)}`;

  try {
    const response = await fetch(apiUrl);
    if (!response.ok) {
      throw new Error('Network response was not ok.');
    }
    const data = await response.json();
    displayResults(data);
  } catch (error) {
    console.error('Error fetching data:', error);
    resultsDiv.innerHTML = 'Error fetching data. Please try again later.';
  }
}

function displayResults(data) {
  resultsDiv.innerHTML = ''; // Clear previous results

  if (data.data.length === 0) {
    resultsDiv.innerHTML = 'No manga found.';
    return;
  }

  data.data.forEach(async (manga) => {
    const title = manga.attributes.title.en || 'Title not available';
    const description = manga.attributes.description.en || 'Description not available';
    const coverId = manga.id;

    const coverUrl = `https://uploads.mangadex.org/covers/${coverId}/cover.jpg`;

    const mangaDiv = document.createElement('div');
    mangaDiv.classList.add('manga-card');

    mangaDiv.innerHTML = `
      <h2>${title}</h2>
      <img src="${coverUrl}" alt="${title} cover">
      <p>${description}</p>
    `;

    resultsDiv.appendChild(mangaDiv);
  });
}


</script>
</body>
</html>
